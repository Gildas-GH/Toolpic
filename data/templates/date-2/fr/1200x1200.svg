<svg xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"

     viewBox="0 0 1200 1200"
     version="1.1">



  <g class="main">

    <image v-bind:xlink:href="typeof backgroundImage == 'object' ? backgroundImage.data : backgroundImage" v-fitimage v-bind:data-image-pos="pos" style="transform-origin: 50% 50%;" />
    <rect x="0" y="0" width="100%" height="100%" style="fill: #000; opacity: 0.3;" v-if="options[1]" />

    <g v-if="options[0]">
      <g>
        <rect x="70" y="50" height="75" v-bind:width="textInfo(date, { fontFamily: 'Gotham-medium', fontSize: '70px'}).width + 50" style="fill: #000;" />
        <text x="95" y="110" style="font-size: 70px; font-family: 'Gotham-medium'; fill: #fff;">
          {{ date }}
        </text>
      </g>
      <g>
        <rect v-bind:x="70 + textInfo(date, { fontFamily: 'Gotham-medium', fontSize: '70px'}).width + 50 - ((textInfo(time, { fontFamily: 'Gotham-medium', fontSize: '70px'}).width + 50) / 3)" y="125" height="75" v-bind:width="textInfo(time, { fontFamily: 'Gotham-medium', fontSize: '70px'}).width + 50" style="fill: #fff;" />
        <text v-bind:x="95 + textInfo(date, { fontFamily: 'Gotham-medium', fontSize: '70px'}).width + 50 - ((textInfo(time, { fontFamily: 'Gotham-medium', fontSize: '70px'}).width + 50) / 3)" y="185" style="font-size: 70px; font-family: 'Gotham-medium'; fill: #000;">
          {{ time }}
        </text>
      </g>

      <g>
        <rect v-bind:x="1200 - 75 - (textInfo(location, { fontFamily: 'Gotham-medium', fontSize: '70px'}).width + 50)" y="1000" height="75" v-bind:width="textInfo(location, { fontFamily: 'Gotham-medium', fontSize: '70px'}).width + 50" style="fill: #fff;" />
        <text v-bind:x="1200 - 55 - (textInfo(location, { fontFamily: 'Gotham-medium', fontSize: '70px'}).width + 50)" y="1060" style="font-size: 70px; font-family: 'Gotham-medium'; fill: #000;">
          {{ location }}
        </text>
      </g>
      <g>
        <rect v-bind:x="1200 - 75 - (textInfo(location, { fontFamily: 'Gotham-medium', fontSize: '70px'}).width + 50) - ((textInfo(locationdetail, { fontFamily: 'Gotham-medium', fontSize: '70px'}).width + 50) / 3)" y="1075" height="75" v-bind:width="textInfo(locationdetail, { fontFamily: 'Gotham-medium', fontSize: '70px'}).width + 50" style="fill: #000;" />
        <text v-bind:x="1200 - 55 - (textInfo(location, { fontFamily: 'Gotham-medium', fontSize: '70px'}).width + 50) - ((textInfo(locationdetail, { fontFamily: 'Gotham-medium', fontSize: '70px'}).width + 50) / 3)" y="1135" style="font-size: 70px; font-family: 'Gotham-medium'; fill: #fff;">
          {{ locationdetail }}
        </text>
      </g>
    </g>



    <g v-dynamic data-dynamic-origin="none" data-dynamic-width="1050" data-dynamic-height="400" style="transform-origin: 50px 525px; text-shadow: 0px 0px 10px rgba(0, 0, 0, 0.7);">
      <text x="50" y="600" style="font-family: 'Gotham-bold'; font-size: 75px; fill: #fff;">
        {{ subtitle }}
      </text>
      <g>
        <g v-for="line in title">
          <text x="50" v-bind:y="720 + title.indexOf(line) * 115" style="font-family: 'Gotham-ultra'; font-size: 105px; fill: #fff;">
            {{ line }}
          </text>
        </g>
      </g>

    </g>


    <defs>
      <filter id="dropshadow" height="130%">
        <feGaussianBlur in="SourceAlpha" stdDeviation="7"/> <!-- stdDeviation is how much to blur -->
        <feOffset dx="0" dy="10" result="offsetblur"/> <!-- how much to offset -->
        <feComponentTransfer>
          <feFuncA type="linear" slope="0.6"/> <!-- slope is the opacity of the shadow -->
        </feComponentTransfer>
        <feMerge>
          <feMergeNode/> <!-- this contains the offset blurred image -->
          <feMergeNode in="SourceGraphic"/> <!-- this contains the element that the filter is applied to -->
        </feMerge>
      </filter>
    </defs>

    <image v-bind:xlink:href="typeof logo == 'object' ? logo.data : logo" x="25" y="925" height="250" width="250" filter="url(#dropshadow)" />


  </g>


</svg>
